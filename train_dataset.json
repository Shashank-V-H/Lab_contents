[
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML page with a centered heading and a button that changes the background color on click.",
    "output": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Centered Heading and Clickable Button</title>\n  <style>\n    h1 {\n      text-align: center;\n    }\n  </style>\n</head>\n<body>\n  <h1>Hello, World!</h1>\n  <button onclick=\"changeColor()\">Change Color</button>\n  <script>\n    function changeColor() {\n      document.body.style.backgroundColor = 'lightblue';\n    }\n  </script>\n</body>\n</html>"
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML form to capture user input and display it on the page.",
    "output": "<!DOCTYPE html>\n<html>\n<head>\n  <title>Simple Form</title>\n</head>\n<body>\n  <form>\n    <label for='name'>Name:</label>\n    <input type='text' id='name' name='name'><br><br>\n    <input type='submit' value='Submit'>\n  </form>\n  <p id='result'></p>\n  <script>\n    const form = document.querySelector('form');\n    form.addEventListener('submit', (event) => {\n      event.preventDefault();\n      const name = document.getElementById('name').value;\n      const result = document.getElementById('result');\n      result.textContent = `Hello, ${name}!`;\n    });\n  </script>\n</body>\n</html>"
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML page with a responsive image gallery.",
    "output": "<html>\n<head>\n  <title>Responsive Image Gallery</title>\n  <style>\n    img {\n      width: 100%;\n      height: auto;\n    }\n  </style>\n</head>\n<body>\n  <img src=\"image1.jpg\" alt=\"Image 1\">\n  <img src=\"image2.jpg\" alt=\"Image 2\">\n  <img src=\"image3.jpg\" alt=\"Image 3\">\n</body>\n</html>"
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Write a JavaScript function to calculate the factorial of a number recursively.",
    "output": "<html>\n<head>\n  <title>Factorial Calculator</title>\n</head>\n<body>\n  <script>\n    function factorial(n) {\n      if (n === 0) {\n        return 1;\n      } else {\n        return n * factorial(n - 1);\n      }\n    }\n    console.log(factorial(5));\n  </script>\n</body>\n</html>"
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML page with a progress bar that fills up over time.",
    "output": "<html>\n<head>\n  <title>Progress Bar</title>\n  <style>\n    .progress-bar {\n      width: 100%;\n      height: 20px;\n      background-color: #ddd;\n    }\n    .progress-bar-fill {\n      height: 100%;\n      background-color: #4CAF50;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"progress-bar\">\n    <div class=\"progress-bar-fill\" id=\"progressBar\"></div>\n  </div>\n  <script>\n    let width = 0;\n    let id = setInterval(frame, 10);\n    function frame() {\n      if (width >= 100) {\n        clearInterval(id);\n      } else {\n        width++;\n        document.getElementById(\"progressBar\").style.width = width + '%';\n      }\n    }\n  </script>\n</body>\n</html>"
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML form to calculate the area of a rectangle.",
    "output": "<html>\n<head>\n  <title>Rectangle Area Calculator</title>\n</head>\n<body>\n  <h1>Rectangle Area Calculator</h1>\n  <form>\n    <label for=\"length\">Length:</label>\n    <input type=\"number\" id=\"length\" name=\"length\"><br><br>\n    <label for=\"width\">Width:</label>\n    <input type=\"number\" id=\"width\" name=\"width\"><br><br>\n    <input type=\"button\" value=\"Calculate Area\" onclick=\"calculateArea()\">\n  </form>\n  <p id=\"result\"></p>\n  <script>\n    function calculateArea() {\n      const length = parseFloat(document.getElementById(\"length\").value);\n      const width = parseFloat(document.getElementById(\"width\").value);\n      const area = length * width;\n      document.getElementById(\"result\").innerHTML = \"The area of the rectangle is: \" + area;\n    }\n  </script>\n</body>\n</html>"
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML page with a table of data.",
    "output": "<html>\n<head>\n  <title>Data Table</title>\n</head>\n<body>\n  <table>\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Age</th>\n        <th>City</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>Alice</td>\n        <td>25</td>\n        <td>New York</td>\n      </tr>\n      <tr>\n        <td>Bob</td>\n        <td>30</td>\n        <td>Los Angeles</td>\n      </tr>\n      <tr>\n        <td>Charlie</td>\n        <td>28</td>\n        <td>Chicago</td>\n      </tr>\n    </tbody>\n  </table>\n</body>\n</html>"
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML page with a dropdown menu.",
    "output": "<html>\n<head>\n  <title>Dropdown Menu</title>\n</head>\n<body>\n  <select>\n    <option value=\"option1\">Option 1</option>\n    <option value=\"option2\">Option 2</option>\n    <option value=\"option3\">Option 3</option>\n  </select>\n</body>\n</html>" 
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML page with a lightbox to display an enlarged image.",
    "output": "<html>\n<head>\n  <title>Lightbox</title>\n  <style>\n    .lightbox {\n      display: none;\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.8);\n      justify-content: center;\n      align-items: center;\n    }\n    .lightbox img {\n      max-width: 80%;\n      max-height: 80%;\n    }\n  </style>\n</head>\n<body>\n  <img src=\"image.jpg\" alt=\"Image\" onclick=\"showLightbox()\">\n  <div class=\"lightbox\" id=\"lightbox\">\n    <img src=\"image.jpg\" alt=\"Enlarged Image\" onclick=\"hideLightbox()\">\n  </div>\n  <script>\n    function showLightbox() {\n      document.getElementById('lightbox').style.display = 'flex';\n    }\n    function hideLightbox() {\n      document.getElementById('lightbox').style.display = 'none';\n    }\n  </script>\n</body>\n</html>"
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML page with a sticky navigation bar.",
    "output": "<html>\n<head>\n  <title>Sticky Navigation Bar</title>\n  <style>\n    nav {\n      position: fixed;\n      top: 0;\n      width: 100%;\n      background-color: #333;\n      padding: 20px;\n    }\n    nav a {\n      color: white;\n      text-decoration: none;\n      padding: 10px;\n    }\n  </style>\n</head>\n<body>\n  <nav>\n    <a href='#home'>Home</a>\n    <a href='#about'>About</a>\n    <a href='#contact'>Contact</a>\n  </nav>\n  <section id='home'>\n    <h1>Welcome to My Website</h1>\n  </section>\n  <section id='about'>\n    <p>This is the About section.</p>\n  </section>\n  <section id='contact'>\n    <p>Contact information goes here.</p>\n  </section>\n</body>\n</html>"
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML page with a card component.",
    "output": "<html>\n<head>\n  <title>Card Component</title>\n  <style>\n    .card {\n      box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n      transition: 0.3s;\n      width: 400px;\n      height: 200px;\n      margin: 20px;\n      padding: 20px;\n    }\n    .card:hover {\n      box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\n    }\n    .card-title {\n      font-size: 24px;\n      font-weight: bold;\n      margin-bottom: 10px;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"card\">\n    <h2 class=\"card-title\">Card Title</h2>\n    <p>This is a card component.</p>\n  </div>\n</body>\n</html>"
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML page with a progress bar that fills up over time.",
    "output": "<html>\n<head>\n  <title>Progress Bar</title>\n  <style>\n    .progress-bar {\n      width: 100%;\n      height: 20px;\n      background-color: #ddd;\n    }\n    .progress-bar-fill {\n      height: 100%;\n      background-color: #4CAF50;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"progress-bar\">\n    <div class=\"progress-bar-fill\" id=\"progressBar\"></div>\n  </div>\n  <script>\n    let width = 0;\n    let id = setInterval(frame, 10);\n    function frame() {\n      if (width >= 100) {\n        clearInterval(id);\n      } else {\n        width++;\n        document.getElementById(\"progressBar\").style.width = width + '%';\n      }\n    }\n  </script>\n</body>\n</html>"
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML page with a modal dialog that displays a message.",
    "output": "<html>\n<head>\n  <title>Modal Dialog</title>\n  <style>\n    .modal {\n      display: none; /* Hidden by default */\n      position: fixed; /* Make it fixed in the middle */\n      z-index: 1; /* Sit on top */\n      left: 0;\n      top: 0;\n      width: 100%; /* Full width */\n      height: 100%; /* Full height */\n      overflow: auto; /* Enable scroll if needed */\n      background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n    }\n    .modal-content {\n      background-color: #fefefe;\n      margin: 15% auto; /* 15% from the top and centered */\n      padding: 20px;\n      border: 1px solid #888;\n      width: 80%; /* Could be % or pixels */\n    }\n    .close {\n      position: absolute;\n      top: 0;\n      right: 25px;\n      color: #000;\n      font-size: 35px;\n      font-weight: bold;\n    }\n  </style>\n</head>\n<body>\n  <button onclick=\"showModal()\">Show Modal</button>\n\n  \n  <div id=\"myModal\" class=\"modal\">\n    \n    <div class=\"modal-content\">\n      <span class=\"close\" onclick=\"closeModal()\">&times;</span>\n      <p>Some text in the Modal..</p>\n    </div>\n  </div>\n\n  <script>\n    // Get the modal\n    var modal = document.getElementById('myModal');\n\n    // Get the button that opens the modal\n    var btn = document.getElementById(\"myBtn\");\n\n    // Get the <span> element that closes the modal\n    var span = document.getElementsByClassName(\"close\")[0];\n\n    // When the user clicks the button, open the modal\n    btn.onclick = function() {\n      modal.style.display = \"block\";\n    }\n\n    // When the user clicks on <span> (x), close the modal\n    span.onclick = function() {\n      modal.style.display = \"none\";\n    }\n\n    // When the user clicks anywhere outside of the modal, close it\n    window.onclick = function(event) {\n      if (event.target == modal) {\n        modal.style.display = \"none\";\n      }\n    }\n  </script>\n</body>\n</html>"
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML page with a card component with a hover effect.",
    "output": "<html>\n<head>\n  <title>Card Component with Hover Effect</title>\n  <style>\n    .card {\n      box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n      transition: 0.3s;\n      width: 400px;\n      height: 200px;\n      margin: 20px;\n      padding: 20px;\n      text-align: center;\n    }\n    .card:hover {\n      box-shadow: 0 12px 16px 0 rgba(0,0,0,0.2);\n      transform: scale(1.05);\n    }\n  </style>\n</head>\n<body>\n  <div class=\"card\">\n    <h2>Card Title</h2>\n    <p>This is a card component with a hover effect.</p>\n  </div>\n</body>\n</html>"
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML page with a responsive navigation bar.",
    "output": "<html>\n<head>\n  <title>Responsive Navigation Bar</title>\n  <style>\n    nav {\n      background-color: #333;\n      overflow: hidden;\n    }\n    nav a {\n      float: left;\n      color: #f2f2f2;\n      text-align: center;\n      padding: 14px 16px;\n      text-decoration: none;\n      font-size: 17px;\n    }\n    nav a:hover {\n      background-color: #ddd;\n      color: black;\n    }\n    nav a.active {\n      background-color: #04AA6D;\n      color: white;\n    }\n    @media screen and (max-width: 600px) {\n      nav a {\n        float: none;\n        display: block;\n        width: 100%;\n        text-align: left;\n      }\n    }\n  </style>\n</head>\n<body>\n  <nav>\n    <a href=\"#home\">Home</a>\n    <a href=\"#news\">News</a>\n    <a href=\"#contact\">Contact</a>\n    <a href=\"#about\">About</a>\n  </nav>\n</body>\n</html>"
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML page with a carousel slider.",
    "output": "<html>\n<head>\n  <title>Carousel Slider</title>\n  <style>\n    * {box-sizing: border-box;}\n    .slideshow-container {\n      width: 100%;\n      position: relative;\n      margin: auto;\n    }\n    .mySlides {\n      display: none;\n    }\n    .prev, .next {\n      cursor: pointer;\n      position: absolute;\n      top: 50%;\n      width: auto;\n      margin-top: -22px;\n      padding: 16px;\n      color: white;\n      font-weight: bold;\n      font-size: 18px;\n      transition: 0.6s ease;\n      border-radius: 0 3px 3px 0;\n      user-select: none;\n    }\n    .next {\n      right: 0;\n      border-radius: 3px 0 0 3px;\n    }\n    .prev:hover, .next:hover {\n      background-color: rgba(0,0,0,0.8);\n    }\n    .dot {\n      cursor: pointer;\n      height: 15px;\n      width: 15px;\n      margin: 0 5px;\n      background-color: #bbb;\n      border-radius: 50%;\n      display: inline-block;\n      transition: background-color 0.6s ease;\n    }\n    .active, .dot:hover {\n      background-color: #717171;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"slideshow-container\">\n    <div class=\"mySlides fade\">\n      <img src=\"img1.jpg\" style=\"width:100%\">\n    </div>\n    <div class=\"mySlides fade\">\n      <img src=\"img2.jpg\" style=\"width:100%\">\n    </div>\n    <div class=\"mySlides fade\">\n      <img src=\"img3.jpg\" style=\"width:100%\">\n    </div>\n    <a class=\"prev\" onclick=\"plusSlides(-1)\">&#10094;</a>\n    <a class=\"next\" onclick=\"plusSlides(1)\">&#10095;</a>\n  </div>\n  <br>\n  <div style=\"text-align:center\">\n    <span class=\"dot\" onclick=\"currentSlide(1)\"></span>\n    <span class=\"dot\" onclick=\"currentSlide(2)\"></span>\n    <span class=\"dot\" onclick=\"currentSlide(3)\"></span>\n  </div>\n  <script>\n    let slideIndex = 1;\n    showSlides(slideIndex);\n\n    function plusSlides(n) {\n      showSlides(slideIndex += n);\n    }\n\n    function currentSlide(n) {\n      showSlides(slideIndex = n);\n    }\n\n    function showSlides(n) {\n      let i;\n      let slides = document.getElementsByClassName(\"mySlides\");\n      let dots = document.getElementsByClassName(\"dot\");\n      if (n > slides.length) {slideIndex = 1}\n      if (n < 1) {slideIndex = slides.length}\n      for (i = 0; i < slides.length; i++) {\n        slides[i].style.display = \"none\";\n      }\n      for (i = 0; i < dots.length; i++) {\n        dots[i].className = dots[i].className.replace(\" active\", \"\");\n      }\n      slides[slideIndex-1].style.display = \"block\";\n      dots[slideIndex-1].className += \" active\";\n    }\n  </script>\n</body>\n</html>"
  },
  {
    "instruction": "You are an AI Text-to-Webapp Generator.Given a textual description of a web page, generate the HTML, CSS, and JavaScript code required to build that page. The output should be a single HTML file containing all necessary code to render the web page. Nothing more",
    "input": "Create a simple HTML page with a sticky footer.",
    "output": "<html>\n<head>\n  <title>Sticky Footer</title>\n  <style>\n    html {\n      height: 100%;\n    }\n    body {\n      min-height: 100%;\n      margin: 0;\n      font-family: Arial, sans-serif;\n    }\n    .footer {\n      position: absolute;\n      bottom: 0;\n      width: 100%;\n      height: 60px;\n      background-color: #f1f1f1;\n      text-align: center;\n    }\n  </style>\n</head>\n<body>\n  <div style=\"height:200px;\">Content</div>\n  <footer class=\"footer\">\n    <p>Footer content</p>\n  </footer>\n</body>\n</html>"
  }
]
